# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
        ONNX_PATH: onnx==1.11.0

      Python39:
        python.version: '3.9'
        ONNX_PATH: onnx==1.12.0

      Python310:
        python.version: '3.10'
        ONNX_PATH: onnx==1.13.0

    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) protobuf numpy
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      pip install onnxruntime
      pip install onnxmltools
      pip install %ONNX_PATH%
      pip install pytest
      pip install -e .
    displayName: 'Install dependencies'

  - script: |
      call activate py$(python.version)
      pip install flake8
      python -m flake8 onnxconverter_common
    displayName: 'run flake8 check'

  - script: |
      call activate py$(python.version)
      pytest tests --doctest-modules --junitxml=junit/test-results-onnxutils.xml
    displayName: 'pytest - onnxutils'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
