#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  DEBIAN_FRONTEND: noninteractive
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      codeql:
        python:
          enabled: true

    stages:
    - stage: firststage
      jobs:
      - job: Testjob
        pool:
          type: linux
        variables:
          ob_outputDirectory: '$(REPOROOT)\out'
          ob_sdl_binskim_break: true 

        steps:
        - script: sudo install -d -m 0777 /home/vsts/.conda/envs
          displayName: Fix Conda permissions

        - script: |
            python -m pip install --upgrade pip
            conda config --set always_yes yes --set changeps1 no
            conda install -c conda-forge protobuf
            conda install -c conda-forge numpy
            pip install -r requirements.txt
            pip install onnxruntime
            pip install onnxmltools
            pip install onnx==1.12.0
            pip install pytest
            pip install -e .
          displayName: 'Install dependencies'

        - script: |
            pip install flake8
            python -m flake8 onnxconverter_common
          displayName: 'run flake8 check'

        - script: |
            python -c "import onnxconverter_common"
            pytest tests --doctest-modules --junitxml=junit/test-results.xml
          displayName: 'pytest - onnxutils'

        - task: PublishTestResults@2
          inputs:
            testResultsFiles: 'junit/test-results.xml'
            testRunTitle: 'Python 3.9'
          condition: succeededOrFailed()

        - task: CmdLine@2
          displayName: Command Line Script
          inputs:
            script: |
              pip install --upgrade pip
              pip install wheel
              python setup.py bdist_wheel

        - task: CopyFiles@2
          displayName: 'Copy Files to ob_outputDirectory'
          inputs:
            SourceFolder: dist/
            Contents: '**/*.whl'
            TargetFolder: $(REPOROOT)/out